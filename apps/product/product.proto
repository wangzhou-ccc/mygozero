syntax = "proto3";

package product;
option go_package = "./product";

service Product {
  rpc Product(ProductItemRequest) returns (ProductItem) ;
  rpc Products(ProductRequest) returns(ProductResponse);
  rpc ProductList(ProductListRequest) returns(ProductListResponse);
  rpc OperationProducts(OperationProductsRequest) returns (OperationProductsResponse);
  rpc UpdateProductStock(UpdateProductStockRequest) returns (UpdateProductStockResponse);
  rpc CheckAndUpdateStock(CheckAndUpdateStockRequest) returns (CheckAndUpdateStockResponse);
  rpc CheckProductStock(UpdateProductStockRequest) returns (UpdateProductStockResponse);
  rpc RollbackProductStock(UpdateProductStockRequest) returns (UpdateProductStockResponse);
  rpc DecrStock(DecrStockRequest) returns(DecrStockResponse);
  rpc DecrStockRevert(DecrStockRequest) returns(DecrStockResponse);
}

message ProductItemRequest {
  int64 product_id = 1;
}

message ProductRequest {
  string product_ids = 1;
}

message ProductResponse {
  map<int64, ProductItem> products = 1;
}

message ProductListRequest {
  int32 category_id = 1;
  int64 cursor = 2;
  int32 ps = 3;
  int64 product_id = 4;
}

message ProductListResponse {
  bool is_end = 1;
  int64 timestamp = 2;
  int64 product_id = 3;
  repeated ProductItem products = 4;
}

message OperationProductsRequest {
}

message OperationProductsResponse {
  repeated ProductItem products = 1;
}

message ProductItem {
  int64 product_id = 1;
  string name = 2;
  string description = 3;
  string image_url = 4;
  int64 create_time = 5;
  int64 stock = 6;
  int64 cateid = 7;
  double price = 8;
  int64 status = 9;
}

message UpdateProductStockRequest {
  int64 product_id = 1;
  int64 num = 2;
}

message UpdateProductStockResponse {
}

message CheckAndUpdateStockRequest {
  int64 product_id = 1;
}

message CheckAndUpdateStockResponse {
}

message DecrStockRequest {
  int64 id = 1;
  int64 num = 2;
}

message DecrStockResponse {
}
